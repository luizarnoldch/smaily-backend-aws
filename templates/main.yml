AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cognito APIGATEWAY test

Parameters:
  ProjectName:
    Type: String
    Description: Smaily Basic Project
    Default: Smaily
  Stage:
    Type: String
    Description: Stage of API GATEWAY
    Default: Prod
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "auth-api-${Stage}"
      StageName: !Ref Stage
      OpenApiVersion: '2.0'
      Description: API supporting the application
      TracingEnabled: true
      Variables:
        LAMBDA_ALIAS: !Ref Stage
      Cors:
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowMethods: "'OPTIONS,DELETE,GET,HEAD,POST,PUT'"
        AllowOrigin: "'*'"
  GetAllDocumentsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: ../bin/get_all_pets.zip
      FunctionName: !Sub "${ProjectName}-get_all_pets"
      Handler: bootstrap
      Runtime: provided.al2
      Environment:
        Variables:
          TABLE_NAME: !Ref PetsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PetsTable
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:PartiQLSelect'
              Resource: !GetAtt PetsTable.Arn
      Events:
        GetAllPets:
          Type: Api
          Properties:
            Path: /pet
            Method: get
            RestApiId: !Ref ApiGatewayApi
  CreateDocumentFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: ../bin/create_pet.zip
      FunctionName: !Sub "${ProjectName}-create_pet"
      Handler: bootstrap
      Runtime: provided.al2
      Environment:
        Variables:
          TABLE_NAME: !Ref PetsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PetsTable
      Events:
        CreatePet:
          Type: Api
          Properties:
            Path: /pet
            Method: post
            RestApiId: !Ref ApiGatewayApi
  PetsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "${ProjectName}-pets"
      PrimaryKey:
        Name: id_pet
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
Outputs:
  PetsTable:
    Description: Pets Table
    Value: !Ref PetsTable
  DocumentoApi:
    Description: "API Gateway endpoint URL for pets"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
